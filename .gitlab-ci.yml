# Copyright (C) 2020 Magenta ApS, http://magenta.dk.
# Contact: info@magenta.dk.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

################################################################################
# Changes to this file requires approval from Labs. Please add a person from   #
# Labs as required approval to your MR if you have any changes.                #
################################################################################

# For `docker push` to work, the following envionment variables have to set in
# the Gitlab UI.
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD

stages:
  - lint-build
  - test
  - release
  - deploy

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/postgres-os2mo

  # Attention. The difference between production images and test images for the
  # temporary git.magenta.dk registries is the suffix to the *path*, of `/prod`
  # and `/test`. The difference between the two images when released to Docker
  # Hub is the the suffix to *tag* of `` and `-test`.
  PROD_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/prod:${CI_COMMIT_SHA}
  PROD_IMAGE_TAG: ${RELEASE_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  PROD_IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest

  TEST_IMAGE_SHA: ${CI_REGISTRY_IMAGE}/test:${CI_COMMIT_SHA}
  TEST_IMAGE_TAG: ${RELEASE_REGISTRY_IMAGE}:${CI_COMMIT_TAG}-test
  TEST_IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest-test

# Build stage
#############

.build_docker_base:
  stage: lint-build
  image:
    # We use the `:debug` image as it contains `sh` needed by gitlab-ci.
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - docker
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - cat /kaniko/.docker/config.json
    - /kaniko/executor
      --context=${CI_PROJECT_DIR}
      --dockerfile=${CI_PROJECT_DIR}/docker/Dockerfile
      --target=${TARGET}
      --destination=${IMAGE}
      --cache=true


build_prod:
  extends: .build_docker_base
  before_script:
    - export TARGET="production"
    - export IMAGE="${PROD_IMAGE_SHA}"

build_test:
  extends: .build_docker_base
  before_script:
    - export TARGET="test"
    - export IMAGE="${TEST_IMAGE_SHA}"

# Release stage
###############

.release-default:
  stage: release
  image: alpine
  variables:
    GIT_STRATEGY: none # We do not need the source code
  tags:
    - docker
  before_script:
    - apk add skopeo

release-master:
  extends: .release-default
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${PROD_IMAGE_SHA}"
      "docker://${PROD_IMAGE_TAG}"
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${PROD_IMAGE_SHA}"
      "docker://${PROD_IMAGE_LATEST}"
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${TEST_IMAGE_SHA}"
      "docker://${TEST_IMAGE_TAG}"
    - skopeo copy
      --src-creds=${CI_REGISTRY_USER}:${CI_BUILD_TOKEN}
      --dest-creds=${RELEASE_REGISTRY_USER}:${RELEASE_REGISTRY_PASSWORD}
      "docker://${TEST_IMAGE_SHA}"
      "docker://${TEST_IMAGE_LATEST}"
